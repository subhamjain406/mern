{"ast":null,"code":"var _jsxFileName = \"/home/reckonsys/subham/subham_workspace/mern/html/src/components/PROFILE/ProfileGit.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\n\nconst ProfileGit = props => {\n  const [state, setState] = useState({\n    clientId: \"d33632c4500cd3dfa66c\",\n    clientSecret: \"6f3198a70a093c77a9781db6b4a594af403245e9\",\n    count: 6,\n    sort: \"created: asc\",\n    repos: []\n  });\n  const myRef = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      const {\n        username\n      } = props;\n      const {\n        count,\n        sort,\n        clientId,\n        clientSecret\n      } = state;\n      fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`).then(res => res.json()).then(data => {\n        if (myRef) {\n          setState({ ...state,\n            repos: data\n          });\n        }\n      }).catch(err => console.log(err));\n    }, 1);\n  }, []);\n  const {\n    repos\n  } = state;\n  const repoItems = repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo.id,\n    className: \"card card-body mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: repo.html_url,\n    className: \"text-info\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, repo.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-secondary mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Forks: \", repo.forks_count)))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: myRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Latest Github Repos\"), repoItems);\n};\n\nProfileGit.propTypes = {\n  username: propTypes.string.isRequired\n};\nexport default ProfileGit;","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/components/PROFILE/ProfileGit.js"],"names":["React","useState","useEffect","useRef","Link","propTypes","ProfileGit","props","state","setState","clientId","clientSecret","count","sort","repos","myRef","setTimeout","username","fetch","then","res","json","data","catch","err","console","log","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\n\nconst ProfileGit = (props) => {\n  const [state, setState] = useState({\n    clientId: \"d33632c4500cd3dfa66c\",\n    clientSecret: \"6f3198a70a093c77a9781db6b4a594af403245e9\",\n    count: 6,\n    sort: \"created: asc\",\n    repos: [],\n  });\n\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const { username } = props;\n      const { count, sort, clientId, clientSecret } = state;\n\n      fetch(\n        `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (myRef) {\n            setState({\n              ...state,\n              repos: data,\n            });\n          }\n        })\n        .catch((err) => console.log(err));\n    }, 1);\n  }, []);\n\n  const { repos } = state;\n  const repoItems = repos.map((repo) => (\n    <div key={repo.id} className=\"card card-body mb-2\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h4>\n            <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\n              {repo.name}\n            </Link>\n          </h4>\n          <p>{repo.description}</p>\n        </div>\n        <div className=\"col-md-6\">\n          <span className=\"badge badge-info mr-1\">\n            Stars: {repo.stargazers_count}\n          </span>\n          <span className=\"badge badge-secondary mr-1\">\n            Watchers: {repo.watchers_count}\n          </span>\n          <span className=\"badge badge-success\">Forks: {repo.forks_count}</span>\n        </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div ref={myRef}>\n      <hr />\n      <h3 className=\"mb-4\">Latest Github Repos</h3>\n      {repoItems}\n    </div>\n  );\n};\n\nProfileGit.propTypes = {\n  username: propTypes.string.isRequired,\n};\n\nexport default ProfileGit;\n"]},"metadata":{},"sourceType":"module"}