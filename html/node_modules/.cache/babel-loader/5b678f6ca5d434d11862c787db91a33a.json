{"ast":null,"code":"var _jsxFileName = \"/home/reckonsys/subham/subham_workspace/mern/html/src/components/post/CommentForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { addComment } from \"../../actions/postAction\";\nimport classnames from \"classnames\";\n\nconst CommentForm = props => {\n  const [state, setState] = useState({\n    text: \"\",\n    errors: {}\n  });\n  useEffect(state => {\n    setState({ ...state,\n      errors: props.errors\n    });\n  }, [props.errors]);\n\n  const onChangeField = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      user\n    } = props.auth;\n    const {\n      postId\n    } = props;\n    const newComment = {\n      text: state.text,\n      name: user.name,\n      profile_img: user.profile_img\n    };\n    props.addComment(postId, newComment);\n    setState({ ...state,\n      text: \"\"\n    });\n  };\n\n  const {\n    errors\n  } = state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header bg-info text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Make a comment...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": errors && errors.text\n    }),\n    placeholder: \"Replt to post\",\n    name: \"text\",\n    value: state.text,\n    onChange: onChangeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, errors.text)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\nCommentForm.propTypes = {\n  errors: propTypes.object.isRequired,\n  addPost: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  postId: propTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addComment\n})(CommentForm);","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/components/post/CommentForm.js"],"names":["React","useState","useEffect","connect","propTypes","addComment","classnames","CommentForm","props","state","setState","text","errors","onChangeField","e","name","value","target","onSubmit","preventDefault","user","auth","postId","newComment","profile_img","object","isRequired","addPost","func","string","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { addComment } from \"../../actions/postAction\";\nimport classnames from \"classnames\";\n\nconst CommentForm = (props) => {\n  const [state, setState] = useState({\n    text: \"\",\n    errors: {},\n  });\n\n  useEffect(\n    (state) => {\n      setState({ ...state, errors: props.errors });\n    },\n    [props.errors]\n  );\n\n  const onChangeField = (e) => {\n    const { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { user } = props.auth;\n    const { postId } = props;\n\n    const newComment = {\n      text: state.text,\n      name: user.name,\n      profile_img: user.profile_img,\n    };\n\n    props.addComment(postId, newComment);\n\n    setState({ ...state, text: \"\" });\n  };\n\n  const { errors } = state;\n  return (\n    <div className=\"post-form mb-3\">\n      <div className=\"card card-info\">\n        <div className=\"card-header bg-info text-white\">Make a comment...</div>\n        <div className=\"card-body\">\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <textarea\n                className={classnames(\"form-control form-control-lg\", {\n                  \"is-invalid\": errors && errors.text,\n                })}\n                placeholder=\"Replt to post\"\n                name=\"text\"\n                value={state.text}\n                onChange={onChangeField}\n              ></textarea>\n              <div className=\"invalid-feedback\">{errors.text}</div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-dark\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  errors: propTypes.object.isRequired,\n  addPost: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  postId: propTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addComment })(CommentForm);\n"]},"metadata":{},"sourceType":"module"}