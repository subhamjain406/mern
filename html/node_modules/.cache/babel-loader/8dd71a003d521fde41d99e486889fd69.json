{"ast":null,"code":"import { ADD_POST, GET_ERRORS, GET_POSTS, POST_LOADING, DELETE_POST, GET_POST, CLEAR_ERRORS } from \"./types\";\nimport axios from \"axios\"; //Add post\n\nexport const addPost = postData => dispatch => {\n  axios.post(\"/api/post\", postData).then(res => {\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //get post\n\nexport const getPost = () => dispatch => {\n  dispatch(setLoadingState());\n  axios.get(\"/api/post\").then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_POSTS,\n      payload: {}\n    });\n  });\n}; //get particular post\n\nexport const getParticularPost = id => dispatch => {\n  dispatch(setLoadingState());\n  axios.get(\"/api/post/\" + id).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_POST,\n      payload: null\n    });\n  });\n}; //delete post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/api/post/\" + id).then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //like and unlike post\n\nexport const likeAndUnlikePost = id => dispatch => {\n  axios.post(\"/api/post/like/\" + id).then(res => {\n    dispatch(getPost());\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //set loading state\n\nexport const setLoadingState = () => {\n  return {\n    type: POST_LOADING\n  };\n}; //clear Error\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; //Add comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/post/comment/\" + postId, commentData).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //delete commnet\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/api/post/comment/\" + postId + \"/\" + commentId).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/actions/postAction.js"],"names":["ADD_POST","GET_ERRORS","GET_POSTS","POST_LOADING","DELETE_POST","GET_POST","CLEAR_ERRORS","axios","addPost","postData","dispatch","post","then","res","type","payload","data","catch","err","response","getPost","setLoadingState","get","getParticularPost","id","deletePost","delete","likeAndUnlikePost","clearErrors","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import {\n  ADD_POST,\n  GET_ERRORS,\n  GET_POSTS,\n  POST_LOADING,\n  DELETE_POST,\n  GET_POST,\n  CLEAR_ERRORS,\n} from \"./types\";\nimport axios from \"axios\";\n\n//Add post\nexport const addPost = (postData) => (dispatch) => {\n  axios\n    .post(\"/api/post\", postData)\n    .then((res) => {\n      dispatch({\n        type: ADD_POST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//get post\nexport const getPost = () => (dispatch) => {\n  dispatch(setLoadingState());\n  axios\n    .get(\"/api/post\")\n    .then((res) => {\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_POSTS,\n        payload: {},\n      });\n    });\n};\n\n//get particular post\nexport const getParticularPost = (id) => (dispatch) => {\n  dispatch(setLoadingState());\n  axios\n    .get(\"/api/post/\" + id)\n    .then((res) => {\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_POST,\n        payload: null,\n      });\n    });\n};\n\n//delete post\nexport const deletePost = (id) => (dispatch) => {\n  axios\n    .delete(\"/api/post/\" + id)\n    .then((res) => {\n      dispatch({\n        type: DELETE_POST,\n        payload: id,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//like and unlike post\nexport const likeAndUnlikePost = (id) => (dispatch) => {\n  axios\n    .post(\"/api/post/like/\" + id)\n    .then((res) => {\n      dispatch(getPost());\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//set loading state\nexport const setLoadingState = () => {\n  return {\n    type: POST_LOADING,\n  };\n};\n\n//clear Error\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n\n//Add comment\nexport const addComment = (postId, commentData) => (dispatch) => {\n  dispatch(clearErrors());\n  axios\n    .post(\"/api/post/comment/\" + postId, commentData)\n    .then((res) => {\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//delete commnet\nexport const deleteComment = (postId, commentId) => (dispatch) => {\n  axios\n    .delete(\"/api/post/comment/\" + postId + \"/\" + commentId)\n    .then((res) => {\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}