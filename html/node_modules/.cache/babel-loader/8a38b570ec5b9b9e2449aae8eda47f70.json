{"ast":null,"code":"import { GET_ERRORS, SET_CURRENT_USER, SET_CURRENT_USER_LOADING, CLEAR_ERRORS } from \"./types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../utility/setAuthToken\";\nimport jwt_decode from \"jwt-decode\"; //register User\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/user/register\", userData).then(data => {\n    console.log(data);\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(\"/login\");\n  }).catch(err => {\n    console.log(err.response.data);\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //Login User\n\nexport const loginUser = userData => dispatch => {\n  dispatch(setloginLoader());\n  axios.post(\"/api/user/login\", userData).then(data => {\n    console.log(data); //Save to local Storage\n\n    localStorage.setItem(\"token\", data.data.token); //Set token to auth header\n\n    setAuthToken(data.data.token); //decode token\n\n    const decoded = jwt_decode(data.data.token); //get current user data\n\n    axios.get(\"/api/user/current\").then(data => {\n      //set current user\n      dispatch(setCurrentUser(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  }).catch(err => {\n    console.log(err.response.data);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: {}\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //setCurrent user function\n\nexport const setCurrentUser = data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data\n  };\n}; //logouit current user\n\nexport const logoutUser = history => dispatch => {\n  localStorage.removeItem(\"token\"); //remove auth header\n\n  setAuthToken(false); // set current user to {}\n\n  dispatch(setCurrentUser({}));\n  history.push(\"/\");\n}; //set laoder for user login\n\nexport const setloginLoader = () => {\n  return {\n    type: SET_CURRENT_USER_LOADING\n  };\n};","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/actions/authAction.js"],"names":["GET_ERRORS","SET_CURRENT_USER","SET_CURRENT_USER_LOADING","CLEAR_ERRORS","axios","setAuthToken","jwt_decode","registerUser","userData","history","dispatch","post","then","data","console","log","type","push","catch","err","response","payload","loginUser","setloginLoader","localStorage","setItem","token","decoded","get","setCurrentUser","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  SET_CURRENT_USER_LOADING,\n  CLEAR_ERRORS,\n} from \"./types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../utility/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n//register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/user/register\", userData)\n    .then((data) => {\n      console.log(data);\n      dispatch({\n        type: CLEAR_ERRORS,\n      });\n      history.push(\"/login\");\n    })\n    .catch((err) => {\n      console.log(err.response.data);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//Login User\nexport const loginUser = (userData) => (dispatch) => {\n  dispatch(setloginLoader());\n  axios\n    .post(\"/api/user/login\", userData)\n    .then((data) => {\n      console.log(data);\n\n      //Save to local Storage\n      localStorage.setItem(\"token\", data.data.token);\n\n      //Set token to auth header\n      setAuthToken(data.data.token);\n\n      //decode token\n      const decoded = jwt_decode(data.data.token);\n\n      //get current user data\n      axios\n        .get(\"/api/user/current\")\n        .then((data) => {\n          //set current user\n          dispatch(setCurrentUser(data.data));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    })\n    .catch((err) => {\n      console.log(err.response.data);\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: {},\n      });\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//setCurrent user function\nexport const setCurrentUser = (data) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data,\n  };\n};\n\n//logouit current user\nexport const logoutUser = (history) => (dispatch) => {\n  localStorage.removeItem(\"token\");\n\n  //remove auth header\n  setAuthToken(false);\n\n  // set current user to {}\n  dispatch(setCurrentUser({}));\n\n  history.push(\"/\");\n};\n\n//set laoder for user login\nexport const setloginLoader = () => {\n  return {\n    type: SET_CURRENT_USER_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}