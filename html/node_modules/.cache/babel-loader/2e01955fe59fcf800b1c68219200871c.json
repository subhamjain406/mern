{"ast":null,"code":"var _jsxFileName = \"/home/reckonsys/subham/subham_workspace/mern/html/src/components/auth/Login/Login.js\";\nimport React, { useEffect, useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authAction\";\nimport classnames from \"classnames\";\nimport Spinner from \"../../common/spinner\";\n\nconst Login = props => {\n  const [state, setstate] = useState({\n    email: \"\",\n    password: \"\",\n    error: {}\n  });\n  const {\n    errors\n  } = props;\n  useEffect(() => {\n    if (errors) {\n      setstate({ ...state,\n        error: errors\n      });\n    }\n  }, [errors, props.auth]);\n  const {\n    auth\n  } = props;\n  useEffect(() => {\n    if (auth.isAuthenticate) {\n      props.history.push(\"/dashboard\");\n    }\n  }, [auth.isAuthenticate]);\n  useEffect(() => {\n    if (auth.isAuthenticate) {\n      props.history.push(\"/dashboard\");\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const user = {\n      email: state.email,\n      password: state.password\n    };\n    props.loginUser(user);\n  };\n\n  const onChangeField = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setstate({ ...state,\n      [name]: value,\n      error: { ...state.error,\n        [name]: \"\"\n      }\n    });\n    console.log(state);\n  };\n\n  const errorsToDisplay = state.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, auth.loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Sign in to your DevConnector account\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": errorsToDisplay.email\n    }),\n    placeholder: \"Email Address\",\n    name: \"email\",\n    onChange: onChangeField,\n    value: state.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, errorsToDisplay.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": errorsToDisplay.password\n    }),\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: onChangeField,\n    value: state.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, errorsToDisplay.password)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-dark btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nLogin.propTypes = {\n  loginUser: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/components/auth/Login/Login.js"],"names":["React","useEffect","useState","propTypes","connect","loginUser","classnames","Spinner","Login","props","state","setstate","email","password","error","errors","auth","isAuthenticate","history","push","onSubmit","e","preventDefault","user","onChangeField","name","value","target","console","log","errorsToDisplay","loading","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authAction\";\nimport classnames from \"classnames\";\nimport Spinner from \"../../common/spinner\";\n\nconst Login = (props) => {\n  const [state, setstate] = useState({\n    email: \"\",\n    password: \"\",\n    error: {},\n  });\n\n  const { errors } = props;\n  useEffect(() => {\n    if (errors) {\n      setstate({ ...state, error: errors });\n    }\n  }, [errors, props.auth]);\n\n  const { auth } = props;\n  useEffect(() => {\n    if (auth.isAuthenticate) {\n      props.history.push(\"/dashboard\");\n    }\n  }, [auth.isAuthenticate]);\n\n  useEffect(() => {\n    if (auth.isAuthenticate) {\n      props.history.push(\"/dashboard\");\n    }\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const user = {\n      email: state.email,\n      password: state.password,\n    };\n\n    props.loginUser(user);\n  };\n\n  const onChangeField = (e) => {\n    const { name, value } = e.target;\n    setstate({\n      ...state,\n      [name]: value,\n      error: { ...state.error, [name]: \"\" },\n    });\n    console.log(state);\n  };\n\n  const errorsToDisplay = state.error;\n\n  return (\n    <div>\n      {auth.loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"login\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Log In</h1>\n                <p className=\"lead text-center\">\n                  Sign in to your DevConnector account\n                </p>\n                <form onSubmit={onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errorsToDisplay.email,\n                      })}\n                      placeholder=\"Email Address\"\n                      name=\"email\"\n                      onChange={onChangeField}\n                      value={state.email}\n                    />\n                    <div className=\"invalid-feedback\">\n                      {errorsToDisplay.email}\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errorsToDisplay.password,\n                      })}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={onChangeField}\n                      value={state.password}\n                    />\n                    <div className=\"invalid-feedback\">\n                      {errorsToDisplay.password}\n                    </div>\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-dark btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  loginUser: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n"]},"metadata":{},"sourceType":"module"}