{"ast":null,"code":"var _jsxFileName = \"/home/reckonsys/subham/subham_workspace/mern/html/src/components/post/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport Spinner from \"../common/spinner\";\nimport { getParticularPost } from \"../../actions/postAction\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentFeed from \"./CommentFeed\";\n\nconst Post = props => {\n  useEffect(() => {\n    props.getParticularPost(props.match.params.id);\n  }, []);\n  const {\n    post,\n    loading\n  } = props.post;\n  let postContent;\n\n  if (post === null || loading || Object.keys(post).length === 0) {\n    postContent = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    });\n  } else {\n    postContent = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PostItem, {\n      post: post,\n      showAction: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CommentForm, {\n      postId: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CommentFeed, {\n      postId: post._id,\n      comments: post.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/feed\",\n    className: \"btn btn-light mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Back To Feed\", \" \"), postContent))));\n};\n\nPost.propTypes = {\n  getParticularPost: propTypes.func.isRequired,\n  post: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getParticularPost\n})(Post);","map":{"version":3,"sources":["/home/reckonsys/subham/subham_workspace/mern/html/src/components/post/Post.js"],"names":["React","useState","useEffect","connect","propTypes","Spinner","getParticularPost","PostItem","Link","CommentForm","CommentFeed","Post","props","match","params","id","post","loading","postContent","Object","keys","length","_id","comments","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtBV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACN,iBAAN,CAAwBM,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAA3C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,KAAK,CAACI,IAAhC;AAEA,MAAIE,WAAJ;;AACA,MAAIF,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA6B,CAA7D,EAAgE;AAC9DH,IAAAA,WAAW,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,UAAU,EAAE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEN,IAAI,CAACM,GAA1B;AAA+B,MAAA,QAAQ,EAAEN,IAAI,CAACO,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACe,GADf,CADF,EAIGL,WAJH,CADF,CADF,CADF,CADF;AAcD,CAjCD;;AAmCAP,IAAI,CAACP,SAAL,GAAiB;AACfE,EAAAA,iBAAiB,EAAEF,SAAS,CAACoB,IAAV,CAAeC,UADnB;AAEfT,EAAAA,IAAI,EAAEZ,SAAS,CAACsB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADsB,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACwB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAgDK,IAAhD,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport Spinner from \"../common/spinner\";\nimport { getParticularPost } from \"../../actions/postAction\";\nimport PostItem from \"../posts/PostItem\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentFeed from \"./CommentFeed\";\n\nconst Post = (props) => {\n  useEffect(() => {\n    props.getParticularPost(props.match.params.id);\n  }, []);\n\n  const { post, loading } = props.post;\n\n  let postContent;\n  if (post === null || loading || Object.keys(post).length === 0) {\n    postContent = <Spinner />;\n  } else {\n    postContent = (\n      <div>\n        <PostItem post={post} showAction={false} />\n        <CommentForm postId={post._id} />\n        <CommentFeed postId={post._id} comments={post.comments} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"post\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n              Back To Feed{\" \"}\n            </Link>\n            {postContent}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  getParticularPost: propTypes.func.isRequired,\n  post: propTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getParticularPost })(Post);\n"]},"metadata":{},"sourceType":"module"}